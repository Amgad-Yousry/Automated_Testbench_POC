=============================================================================
List of generated methods in project: cmp_dac_s32k144

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_SYS_SetScgConfiguration -Configures SCG module.
   - clockMan1_CLOCK_SYS_SetPccConfiguration -Configures PCC module.
   - clockMan1_CLOCK_SYS_SetSimConfiguration -Configures SIM module.
   - clockMan1_CLOCK_SYS_SetPmcConfiguration -Configures PMC module.
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetMuxModeSel -This function configures the pin muxing
   - pin_mux_PINS_DRV_SetPinIntSel -This function configures the port pin interrupt/DMA request
   - pin_mux_PINS_DRV_GetPinIntSel -This function gets the current port pin interrupt/DMA request configuration
   - pin_mux_PINS_DRV_ClearPinIntFlagCmd -This function clears the individual pin-interrupt status flag
   - pin_mux_PINS_DRV_GetPortIntFlag -This function reads the entire port interrupt status flag
   - pin_mux_PINS_DRV_ClearPortIntFlagCmd -This function clears the entire port interrupt status flag
   - pin_mux_PINS_DRV_GetPinsDirection -This function returns the current pins directions for a port. Pins corresponding to 
                bits with value of '1' are configured as output and pins corresponding to bits with value of '0' are configured 
                as input.
   - pin_mux_PINS_DRV_SetPinDirection -This function configures the direction for the given pin, with the given value('1' for 
                pin to be configured as output and '0' for pin to be configured as input)
   - pin_mux_PINS_DRV_SetPinsDirection -This function sets the direction configuration for all pins in a port. Pins 
                corresponding to bits with value of '1' will be configured as output and pins corresponding to bits with value 
                of '0' will be configured as input.
   - pin_mux_PINS_DRV_SetPortInputDisable -This function sets the pins input state for a port. Pins corresponding to bits with 
                value of '1' will not be configured as input and pins corresponding to bits with value of '0' will be 
                configured as input
   - pin_mux_PINS_DRV_GetPortInputDisable -This function returns the current pins input state for a port. Pins corresponding to 
                bits with value of '1' are not configured as input and pins corresponding to bits with value of '0' are 
                configured as input
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "comparator1" (component cmp)
   - comparator1_CMP_DRV_Reset -Reset all registers.
   - comparator1_CMP_DRV_GetInitConfigAll -Get reset configuration for all registers.
   - comparator1_CMP_DRV_Init -Configure all comparator features with the given configuration structure.
   - comparator1_CMP_DRV_GetConfigAll -Gets the current comparator configuration.
   - comparator1_CMP_DRV_GetInitConfigDAC -Get reset configuration for registers related with DAC.
   - comparator1_CMP_DRV_ConfigDAC -Configure only the DAC component.
   - comparator1_CMP_DRV_GetDACConfig -Return current configuration for DAC.
   - comparator1_CMP_DRV_GetInitConfigMUX -Get reset configuration for registers related with MUX.
   - comparator1_CMP_DRV_ConfigMUX -Configure only the MUX component.
   - comparator1_CMP_DRV_GetMUXConfig -Return configuration only for the MUX component.
   - comparator1_CMP_DRV_GetInitTriggerMode -Get reset configuration for registers related with Trigger Mode.
   - comparator1_CMP_DRV_ConfigTriggerMode -Configure trigger mode.
   - comparator1_CMP_DRV_GetTriggerModeConfig -Get current trigger mode configuration.
   - comparator1_CMP_DRV_GetOutputFlags -Get comparator output flags.
   - comparator1_CMP_DRV_ClearOutputFlags -Clear comparator output flags.
   - comparator1_CMP_DRV_GetInputFlags -Gets input channels change flags.
   - comparator1_CMP_DRV_ClearInputFlags -Clear comparator input channels flags.
   - comparator1_CMP_DRV_GetInitConfigComparator -Get reset configuration for registers related with comparator features.
   - comparator1_CMP_DRV_ConfigComparator -Configure only comparator features.
   - comparator1_CMP_DRV_GetComparatorConfig -Return configuration for comparator from CMP module.

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_ClearPending -Clear Pending Interrupt.
   - intMan1_INT_SYS_SetPending -Set Pending Interrupt.
   - intMan1_INT_SYS_GetPending -Get Pending Interrupt.
   - intMan1_INT_SYS_GetActive -Get Active Interrupt.

Module "Cpu"       (component S32K144_100)
   - Cpu_SystemInit -This function disables the watchdog, enables FPU and the power mode protection. SystemInit is called from 
                startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock. It must be called whenever the core clock is changed during program execution
   - Cpu_SystemSoftwareReset -This method initiates initiate a system reset.

===================================================================================
